name: Test Cars CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_image:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: docker build -t test-cars . --build-arg BUILDKIT_INLINE_CACHE=1

      - name: Save Docker image to tar
        run: docker save test-cars > test-cars.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: test-cars-image
          path: test-cars.tar

  TestApi:
    runs-on: ubuntu-latest
    needs: build_image

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: test-cars-image

      - name: Load Docker image
        run: docker load < test-cars.tar

      - name: Create results directory
        run: mkdir -p tests/results

      - name: Run API tests
        run: |
          docker run --rm -v ${{ github.workspace }}/tests/results:/tests/results test-cars bash -c "pytest -s -v tests/test_app_api.py > /tests/results/api_results.txt"

      - name: Check if API test results exist
        run: |
          if [ -f tests/results/api_results.txt ]; then
            echo "API test results exist."
          else
            echo "API test results are missing!"
            exit 1
          fi

      - name: Upload API test results
        uses: actions/upload-artifact@v4
        with:
          name: api-results
          path: tests/results/api_results.txt

  TestUi:
    runs-on: ubuntu-latest
    needs: TestApi

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: test-cars-image

      - name: Load Docker image
        run: docker load < test-cars.tar

      - name: Create results directory
        run: mkdir -p tests/results

      - name: Run UI tests
        run: |
          docker run --rm -v ${{ github.workspace }}/tests/results:/tests/results test-cars bash -c "pytest -s -v tests/test_list_cars_ui.py > /tests/results/ui_results.txt"

      - name: Check if UI test results exist
        run: |
          if [ -f tests/results/ui_results.txt ]; then
            echo "UI test results exist."
          else
            echo "UI test results are missing!"
            exit 1
          fi

      - name: Upload UI test results
        uses: actions/upload-artifact@v4
        with:
          name: ui-results
          path: tests/results/ui_results.txt
